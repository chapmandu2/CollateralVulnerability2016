#!/usr/bin/env ruby
#use genes "WBGene00000003,WBGene00008571,WBGene00002176,WBGene00004063,WBGene00000089,WBGene00022358"

require "rubygems"
require "intermine/service"

input = ARGV[0]
genes = input.chomp.split(",")
#print genes

service = Service.new("http://im-254.wormbase.org/tools/wormmine")

# Get the observed allele phenotypes
# Define the fields
fields1 = ["primaryIdentifier", "symbol", "secondaryIdentifier", "briefDescription", "alleles.symbol",
        "alleles.primaryIdentifier", "alleles.phenotypesObserved.identifier", "alleles.phenotypesObserved.name",
        "alleles.phenotypesObserved.description"]

#run the first query
res1 = service.new_query("Gene").
select(fields1).
where("Gene.primaryIdentifier" => genes).
where("Gene.alleles.phenotypesObserved.name" => {:contains => "lethal"}).
order_by("primaryIdentifier", "ASC")


# Now get not observed allele phentypes
# Define the fields
fields2 = ["primaryIdentifier", "symbol", "secondaryIdentifier", "briefDescription", "alleles.symbol",
        "alleles.primaryIdentifier", "alleles.phenotypesNotObserved.identifier", "alleles.phenotypesNotObserved.name",
        "alleles.phenotypesNotObserved.description"]

#run the second query
res2 = service.new_query("Gene").
select(fields2).
where("Gene.primaryIdentifier" => genes).
where("Gene.alleles.phenotypesNotObserved.name" => {:contains => "lethal"}).
order_by("primaryIdentifier", "ASC")

# Get the observed reference allele phenotypes
# Define the fields
fields3 = ["primaryIdentifier", "symbol", "secondaryIdentifier", "briefDescription", "referenceAllele.symbol",
        "referenceAllele.primaryIdentifier", "referenceAllele.phenotypesObserved.identifier", "referenceAllele.phenotypesObserved.name",
        "referenceAllele.phenotypesObserved.description"]

#run the third query
res3 = service.new_query("Gene").
select(fields3).
where("Gene.primaryIdentifier" => genes).
where("Gene.referenceAllele.phenotypesObserved.name" => {:contains => "lethal"}).
order_by("primaryIdentifier", "ASC")

# Get the not observed reference allele phenotypes
# Define the fields
fields4 = ["primaryIdentifier", "symbol", "secondaryIdentifier", "briefDescription", "referenceAllele.symbol",
        "referenceAllele.primaryIdentifier", "referenceAllele.phenotypesNotObserved.identifier", "referenceAllele.phenotypesNotObserved.name",
        "referenceAllele.phenotypesNotObserved.description"]

#run the third query
res4 = service.new_query("Gene").
select(fields3).
where("Gene.primaryIdentifier" => genes).
where("Gene.referenceAllele.phenotypesNotObserved.name" => {:contains => "lethal"}).
order_by("primaryIdentifier", "ASC")

#now output data
res1.each_row { |r| puts r.to_csv + "\t\"allele_phenotypesObserved\""}
res2.each_row { |r| puts r.to_csv + "\t\"allele_phenotypesNotObserved\""}
res3.each_row { |r| puts r.to_csv + "\t\"referenceAllele_phenotypesObserved\""}
res4.each_row { |r| puts r.to_csv + "\t\"referenceAllele_phenotypesNotObserved\""}
